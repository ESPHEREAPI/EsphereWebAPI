/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package controllers.parametrage;

import static Entreprise.EntrepriseServices.logger;
import dao.OrclassCaracteristiquesDao;
import dao.OrclassCategoriesDao;
import dao.OrclassSousCaracteristiqueProduitDao;
import enums.ModeApplicationSante;
import enums.SousCaracteristiqueProduit;
import exception.GlobalException;
import exception.Success;
import java.io.IOException;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.faces.application.FacesMessage;
import javax.faces.component.UIComponent;
import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;
import javax.faces.model.SelectItem;
import javax.faces.view.ViewScoped;
import javax.inject.Named;
import modele.OrclassCaracteristiques;
import modele.OrclassCategories;
import modele.OrclassEntreprises;
import modele.OrclassMenus;
import modele.OrclassModules;
import modele.OrclassSousCaracteristiqueProduit;
import modele.OrclassUtilisateurs;
import modele.Orclass_Access_Avenant;
import org.hibernate.exception.ConstraintViolationException;
import org.primefaces.PrimeFaces;
import utils.GlobalFonctions;
import utils.LocaleHelper;
import utils.RecupBundle;

/**
 *
 * @author JIATOU FRANCK
 */
@Named(value = "sousCaractereProduitController")
@ViewScoped
public class SousCaractereProduitController implements Serializable {
    
    @EJB
    OrclassCaracteristiquesDao caracteristiquesDao;
    OrclassCaracteristiques caracteristiques;
    @EJB
    OrclassCategoriesDao categoriesDao;
    OrclassCategories categories;
    @EJB
    OrclassSousCaracteristiqueProduitDao sousCaracteristiqueProduitDao;
    OrclassSousCaracteristiqueProduit sousCaracteristiqueProduit;
    private List<OrclassSousCaracteristiqueProduit> filterSousCaracteristiqueProduit = new ArrayList<>();
    private List<OrclassSousCaracteristiqueProduit> listeSousCaracteristiqueProduit = new ArrayList<>();
    
    String summary = "";
    String msgdetail = "";
    private OrclassEntreprises entreprise;
    private OrclassMenus menu;
    private OrclassModules module;
    OrclassUtilisateurs user;
    
    public SousCaractereProduitController(OrclassCaracteristiques caracteristiques, OrclassCategories categories) {
        this.caracteristiques = caracteristiques;
        this.categories = categories;
        this.sousCaracteristiqueProduit = new OrclassSousCaracteristiqueProduit();
    }
    
    @PostConstruct
    void initialiseSession() {
        FacesContext.getCurrentInstance().getExternalContext().getSession(true);
        entreprise = (OrclassEntreprises) FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get(GlobalFonctions.ENTREPRISE_ACTIF);
        if (entreprise == null) {
            entreprise = (OrclassEntreprises) FacesContext.getCurrentInstance().getExternalContext().getApplicationMap().get(GlobalFonctions.ENTREPRISE_ACTIF);
            
        }
        
        user = (OrclassUtilisateurs) FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get(GlobalFonctions.SESSION_USER);
        listeSousCaracteristiqueProduit = sousCaracteristiqueProduitDao.listeSousCaracteristique(entreprise);
        this.updateDataTableSCP();
    }
    
    public void updateDataTableSCP() {
        UIComponent table = FacesContext.getCurrentInstance().getViewRoot().findComponent(":form1:idtabSCP");
        table.setValueExpression("sortBy", null);
        
        PrimeFaces.current().executeScript("PF('tabSCP').clearFilters();");
        
    }
    
      public List<SelectItem> getEnumSousCaractProd() {
        List<SelectItem> items = new ArrayList<>();
        
        FacesContext ctx = FacesContext.getCurrentInstance();
        Locale myLoc = ctx.getViewRoot().getLocale();
        for (SousCaracteristiqueProduit scp: SousCaracteristiqueProduit.values()) {
            items.add(new SelectItem(scp, LocaleHelper.getLocaleString(RecupBundle.FichierBundle, scp.name(), null, myLoc)));
        }
        
        return items;
        
    }
    
    public void updateSCP() throws IOException {
        // etudiant.setMatricule(GenerationController.genererMatricule());
        FacesContext ctx = FacesContext.getCurrentInstance();
        ExternalContext extContext = ctx.getExternalContext();
        Locale myLoc = ctx.getViewRoot().getLocale();
        Boolean valider = Boolean.FALSE;
        try {

            //traitement de la photo
            if (sousCaracteristiqueProduit!=null && sousCaracteristiqueProduit.getIdSousCarPrd()!=null) {
               
                
                sousCaracteristiqueProduitDao.update(sousCaracteristiqueProduit);
                GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_INFO, "scp.update", Success.UPDATE_SUCCESS + "", new Object[]{sousCaracteristiqueProduit});
                
            } else {
//                GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_WARN, "police", exception.Error.DUPLICATE_ERROR_INSERT + "" + numero_police, null);
                GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_WARN, "scp.update", exception.Error.UPDATE_ERROR + "", new Object[]{sousCaracteristiqueProduit});
                return;
            }
            
        } catch (GlobalException e) {
            GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_ERROR, sousCaracteristiqueProduit.toString(), e.getCode(), e.getParam());
            //throw e;
        } catch (ConstraintViolationException ejb) {
            GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_WARN, ejb.getCause().getClass().getSimpleName(), exception.Error.FATAL_ERROR + "", null);
            throw ejb;
        } catch (Throwable th) {
            GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_FATAL, "scp.update", exception.Error.FATAL_ERROR + "", new Object[]{sousCaracteristiqueProduit});
            logger.error("Erreur Survenu", th);
        }


    }
    
    public void addSCP() {
        // etudiant.setMatricule(GenerationController.genererMatricule());
        FacesContext ctx = FacesContext.getCurrentInstance();
        ExternalContext extContext = ctx.getExternalContext();
        Locale myLoc = ctx.getViewRoot().getLocale();
        Boolean valider = Boolean.FALSE;
        Orclass_Access_Avenant access_Avenant = null;
        try {

            //traitement de la photo
            if ((sousCaracteristiqueProduitDao.finKey(entreprise, caracteristiques, categories)) == null) {
                sousCaracteristiqueProduit.setIdCaracteristiques(caracteristiques);
                sousCaracteristiqueProduit.setIdEntreprise(entreprise);
                sousCaracteristiqueProduit.setIdCategories(categories);
                sousCaracteristiqueProduit.setIdUtilisateurs(user);
                sousCaracteristiqueProduitDao.create(sousCaracteristiqueProduit);
                
                if (access_Avenant == null || access_Avenant.getId() == null) {
                    GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_FATAL, "Access", "ERROR FOR INSERTION VALUE IS NULL" + " PLEASE CHECK AND TRY AGAINST", new Object[]{access_Avenant});
                    return;
                    
                }
                listeSousCaracteristiqueProduit = sousCaracteristiqueProduitDao.listeSousCaracteristique(entreprise);
                
                GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_INFO, "access.droit.typeAvenant", Success.OPERATION_SUCCESS + "", new Object[]{access_Avenant});
                
            } else {
                GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_WARN, "police", exception.Error.DUPLICATE_ERROR_INSERT + "" + sousCaracteristiqueProduit.getIdCaracteristiques().getLibelle(), null);
                return;
            }
            
        } catch (GlobalException e) {
            GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_ERROR, access_Avenant.toString(), e.getCode(), e.getParam());
            //throw e;
        } catch (ConstraintViolationException ejb) {
            GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_WARN, ejb.getCause().getClass().getSimpleName(), exception.Error.FATAL_ERROR + "", null);
            throw ejb;
        } catch (Throwable th) {
            GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_FATAL, "scp.ajout", exception.Error.FATAL_ERROR + "", new Object[]{"scp.ajout"});
            logger.error("Erreur Survenu", th);
        }
//        if (Objects.equals(valider, Boolean.TRUE)) {
//            this.reload();
//        }

    }
    
    public void deleteSCP() throws IOException {
        // etudiant.setMatricule(GenerationController.genererMatricule());
        FacesContext ctx = FacesContext.getCurrentInstance();
        ExternalContext extContext = ctx.getExternalContext();
        Locale myLoc = ctx.getViewRoot().getLocale();
        Boolean valider = Boolean.FALSE;
        int retournValeur = 0;
        try {

            //traitement de la photo
            if ((sousCaracteristiqueProduit != null && sousCaracteristiqueProduit.getIdSousCarPrd() != null)) {
                sousCaracteristiqueProduitDao.delete(sousCaracteristiqueProduit);
                listeSousCaracteristiqueProduit=sousCaracteristiqueProduitDao.listeSousCaracteristique(entreprise);
                GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_INFO, "scp.delete", Success.DELETE_SUCCESS + "", new Object[]{sousCaracteristiqueProduit});
                
             
            } else {
//                GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_WARN, "police", exception.Error.DUPLICATE_ERROR_INSERT + "" + numero_police, null);
                GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_WARN, "scp.delete", exception.Error.FATAL_ERROR + "", new Object[]{sousCaracteristiqueProduit});
                return;
            }
            
        } catch (GlobalException e) {
            GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_ERROR, sousCaracteristiqueProduit.toString(), e.getCode(), e.getParam());
            //throw e;
        } catch (ConstraintViolationException ejb) {
            GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_WARN, ejb.getCause().getClass().getSimpleName(), exception.Error.FATAL_ERROR + "", null);
            throw ejb;
        } catch (Throwable th) {
            GlobalFonctions.displayMessages(null, ctx, FacesMessage.SEVERITY_FATAL, "scp.delete", exception.Error.FATAL_ERROR + "", new Object[]{sousCaracteristiqueProduit});
            logger.error("Erreur Survenu", th);
        }


    }
    
}
